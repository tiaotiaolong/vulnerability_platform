#coding=utf-8

from django.shortcuts import render,render_to_response
from django.http import HttpResponse
from struts2.models import *
from . import forms
import os
import smtplib
from email.mime.text import MIMEText
from email.header import Header
import json
from struts2.tasks import *
import geoip2.database
import socket
import re
from django.db.models import Q

#Create your views here.
import struts_poc

def index(request):
    return render(request,"index.html",locals())

def new(request):
    return render(request,"new.html",locals())

def struts2_index(request):
    return render(request,"struts_2.html",locals())


red_pic_dir="http://okzjjcktf.bkt.clouddn.com/tanhao.png"
green_pic_dir="http://okzjjcktf.bkt.clouddn.com/duihao.png"
error_pic_dir="http://okzjjcktf.bkt.clouddn.com/error.png"

def deal_struts2(request):

    if request.method=="GET":
        url=str(request.GET.get('urlname'))
        list=[]

        result=struts_poc.struts_019(url)
        if result[0]==True:
            struts_019_pic=red_pic_dir
            struts_019_be=True
        else:
            struts_019_pic=green_pic_dir
            struts_019_be=False
        struts_target_url=result[2]


        result=struts_poc.struts_033(url)
        if result[0]==True:
            struts_033_pic=red_pic_dir
            struts_033_be=True
        else:
            struts_033_pic=green_pic_dir
            struts_033_be=False




        result=struts_poc.struts_005(url)
        if result[0]==True:
            struts_005_pic=red_pic_dir
            struts_005_be=True
        else:
            struts_005_pic=green_pic_dir
            struts_005_be=False




        result=struts_poc.struts_016(url)
        if result[0]==True:
            struts_016_pic=red_pic_dir
            struts_016_be=True
        else:
            struts_016_pic=green_pic_dir
            struts_016_be=False




        result=struts_poc.struts_032(url)
        if result[0]==True:
            struts_032_pic=red_pic_dir
            struts_032_be=True
        else:
            struts_032_pic=green_pic_dir
            struts_032_be=False




        result=struts_poc.struts_037(url)
        if result[0]==True:
            struts_037_pic=red_pic_dir
            struts_037_be=True
        else:
            struts_037_pic=green_pic_dir
            struts_037_be=False



        result=struts_poc.struts_045(url)
        if result[0]==True:
            struts_045_pic=red_pic_dir
            struts_045_be=True
        else:
            struts_045_pic=green_pic_dir
            struts_045_be=False


        ip=get_ip_from_domain(url)


        #判断数据库中是否存在
        #filterResult=Info_Struts2.objects.filter(target_url=struts_target_url)
        #if (len(filterResult)==0):
            #把扫描结果保存到数据库
        obj_Info_Struts2=Info_Struts2(target_url=struts_target_url,struts_005=struts_005_be,struts_016=struts_016_be,struts_019=struts_019_be,struts_032=struts_032_be,struts_033=struts_033_be,struts_037=struts_037_be,struts_045=struts_045_be,ip=ip)
        obj_Info_Struts2.save()

        #record=Info_Struts2.objects.all()
        #return HttpResponse((record[0].struts_019,record[1].struts_019))
        #return HttpResponse(len(record))
        #把本次的扫描结果返回给前端


        record=Info_Struts2.objects.all()
        temp=[]
        count=13
        page=1


        if count*page>len(record):
            last=len(record)
        else:
            last=count*page

        for i in range(last-13,last):
            temp.append(record[i])

        #return render_to_response("struts2_result.html",{'struts2_list':temp,'struts_019_pic':pic,'struts_033_pic':pic,'struts_032_pic':pic,'struts_005_pic':pic,'struts_016_pic':pic,'struts_037_pic':pic,'struts_045_pic':pic})


        return render_to_response("struts2_result.html",{'struts_019_pic':struts_019_pic,'struts_019_be':struts_019_be,'struts_target_url':struts_target_url,'struts_033_pic':struts_033_pic,'struts_033_be':struts_033_be,'struts_005_pic':struts_005_pic,'struts_005_be':struts_005_be,'struts_016_pic':struts_016_pic,'struts_016_be':struts_016_be,'struts_032_pic':struts_032_pic,'struts_032_be':struts_032_be,'struts_037_pic':struts_037_pic,'struts_037_be':struts_037_be,'struts_045_pic':struts_045_pic,'struts_045_be':struts_045_be,'struts2_list':temp})

def struts2_result(request):
    try:
        page=int(request.GET.get('page'))
    except:
        page=1

    pic='http://okzjjcktf.bkt.clouddn.com/struts2_new.png'
    record=Info_Struts2.objects.all()
    temp=[]
    count=13


    if count*page>len(record):
        last=len(record)
    else:
        last=count*page

    for i in range(last-13,last):
        temp.append(record[i])

    return render_to_response("struts2_result.html",{'struts2_list':temp,'struts_019_pic':pic,'struts_033_pic':pic,'struts_032_pic':pic,'struts_005_pic':pic,'struts_016_pic':pic,'struts_037_pic':pic,'struts_045_pic':pic})
    #return render(request,"struts2_result.html",locals())


#获取数据库的行数
def get_db_rows():
    return Info_Struts2.objects.count()



#处理文件上传的接口
def struts2_upload(request):
    if request.method=="POST":
        myfile=request.FILES.get("file",None)
        if not myfile:
            return HttpResponse('<script>alert("upload failes!")</script>')
        des=open(os.path.join(os.path.dirname(os.path.dirname(os.path.abspath(__file__))),'files/'+myfile.name),'wb+')
        for chunk in myfile.chunks():   # 分块写入文件
            des.write(chunk)
        des.close()

        file=open('/Users/tangtianlong/Desktop/vlun_paltform/files/'+myfile.name)
        url_list=file.readlines()
        file.close()

        #获取初始状态数据库行数
        db_start_num=get_db_rows()
        #获取文件里url行数
        db_task_num=len(url_list)

        #Celery实现异步处理

        for item in url_list:
            deal_url.delay(item)

        mon_deal_url.delay(db_start_num,db_task_num)

        return HttpResponse("<script>alert('后台正在扫描中....扫描完成后注意查收邮件');"
                            "window.location.href='/index';</script>")


#漏扫结束邮箱通知:
def send_mail():
    sender = 'tiao_tiao_long@163.com'
    receiver = '992349839@qq.com'
    subject = '跳跳龙通知'
    smtpserver = 'smtp.163.com'
    username = 'tiao_tiao_long@163.com'
    password = 'xxxxxx'

    msg = MIMEText('您的漏洞扫描任务已经结束,请前往跳跳龙漏洞扫描平台观察结果','plain','utf-8')#中文需参数‘utf-8'，单字节字符不需要
    msg['Subject'] = Header(subject, 'utf-8')
    msg['From'] = '跳跳龙漏洞检测平台'
    msg['To'] = "992349839@qq.com"
    smtp = smtplib.SMTP()
    smtp.connect('smtp.163.com')
    smtp.login(username, password)
    smtp.sendmail(sender, receiver, msg.as_string())
    smtp.quit()



#数据展示 Map
def get_echarts_map(request):
    return render(request,"echarts_map.html",locals())

#数据展示 Table
def get_echarts_table(request):
    struts_005_num=Info_Struts2.objects.filter(struts_005="True").count()
    struts_016_num=Info_Struts2.objects.filter(struts_016="True").count()
    struts_019_num=Info_Struts2.objects.filter(struts_019="True").count()
    struts_032_num=Info_Struts2.objects.filter(struts_032="True").count()
    struts_033_num=Info_Struts2.objects.filter(struts_033="True").count()
    struts_037_num=Info_Struts2.objects.filter(struts_037="True").count()
    struts_045_num=Info_Struts2.objects.filter(struts_045="True").count()
    return render_to_response("echarts_table.html",{'struts_005_num':struts_005_num,'struts_016_num':struts_016_num,'struts_019_num':struts_019_num,'struts_032_num':struts_032_num,'struts_033_num':struts_033_num,'struts_037_num':struts_037_num,'struts_045_num':struts_045_num})


#数据展示 Pie
def get_echarts_pie(request):
    struts_005_num=Info_Struts2.objects.filter(struts_005="True").count()
    struts_016_num=Info_Struts2.objects.filter(struts_016="True").count()
    struts_019_num=Info_Struts2.objects.filter(struts_019="True").count()
    struts_032_num=Info_Struts2.objects.filter(struts_032="True").count()
    struts_033_num=Info_Struts2.objects.filter(struts_033="True").count()
    struts_037_num=Info_Struts2.objects.filter(struts_037="True").count()
    struts_045_num=Info_Struts2.objects.filter(struts_045="True").count()
    return render_to_response("echarts_pie.html",{'struts_005_num':struts_005_num,'struts_016_num':struts_016_num,'struts_019_num':struts_019_num,'struts_032_num':struts_032_num,'struts_033_num':struts_033_num,'struts_037_num':struts_037_num,'struts_045_num':struts_045_num})

def getip(domain):
	result=socket.getaddrinfo(domain,None)
	return result[0][4][0]

def get_ip_from_domain(domain_byuser):
    pattern=re.compile(r'https?:\/\/(?P<domain>.*?)\/') #对准确url进行匹配 如：http://www.taobao.com/dddddddd.php
    obj=pattern.match(domain_byuser)
    if obj and ':' not in obj.groupdict()['domain']:
		try:
			ip=getip(obj.groupdict()['domain'])
			return ip
		except Exception:
			return "0.0.0.0"
    pattern=re.compile(r'https?:\/\/(?P<ip>.*?):(?P<port>\d+)') #对ip形式的url进行匹配 如http://139.196.171.33:80/dddd.php
    obj=pattern.match(domain_byuser)
    if obj:
    	return obj.groupdict()['ip']
    return "0.0.0.0"

#通过ip获取地理位置
def get_location(ip):
    reader = geoip2.database.Reader('/Users/tangtianlong/hackingtools/GeoIP/GeoLite2-City.mmdb')
    try:
        response = reader.city(ip)
        location=response.city.names['zh-CN']
    except Exception:
        return "未知地址"
    return location

#数据展示 Map
def get_echarts_map(request):

    object=Info_Struts2.objects.filter(Q(struts_005="True")|Q(struts_016="True")|Q(struts_019="True")|Q(struts_032="True")|Q(struts_033="True")|Q(struts_037="True")|Q(struts_045="True"))
    list_ip=[]
    for item in object:
        list_ip.append(item.ip)

    initval=1
    dic_temp={}
    for item in list_ip:
        location=get_location(item)

        #if "\u5e02" in location:
            #location=location.replace("\u5e02",'')
        if not dic_temp.has_key(location):
            dic_temp[location]=50
        dic_temp[location]=dic_temp[location]+50
    #return HttpResponse(json.dumps(dic_result))

    #dic_result={}
    return render_to_response("echarts_map.html",{"city_info":dic_temp})

    #return render(request,"echarts_map.html",locals())







